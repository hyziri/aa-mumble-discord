version: '3'

services:
  auth_mysql:
    image: mysql:8.0
    command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --default-authentication-plugin=mysql_native_password]
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ./setup.sql:/docker-entrypoint-initdb.d/setup.sql
    environment:
      - MYSQL_ROOT_PASSWORD=${AA_DB_ROOT_PASSWORD?err}
    healthcheck:
      test: ["CMD", "mysqladmin", "-uroot", "-proot", "-h", "localhost", "ping"]
      interval: 5s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - allianceauth

  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    restart: always
    command:
      - --log.level=INFO
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      - --entrypoints.web.address=:80
      - --entryPoints.websecure.address=:443
      # ACME
      - --certificatesresolvers.primary.acme.httpchallenge=true
      - --certificatesresolvers.primary.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.primary.acme.email=${ESI_USER_CONTACT_EMAIL}
      - --certificatesresolvers.primary.acme.storage=/letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - "./data/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik
    labels:
      - "traefik.enable=true"

  nginx:
    image: nginx:1.21
    restart: always
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
      - static-volume:/var/www/myauth/static
    depends_on:
      - allianceauth
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.auth.rule=Host(`${AUTH_SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.auth.entrypoints=websecure
      - traefik.http.routers.auth.tls.certresolver=primary
    networks:
      - traefik
      - allianceauth

  mumble_auth:
    container_name: ${MUMBLE_HOST_NAME}
    hostname: ${MUMBLE_HOST_NAME}
    build:
      context: .
      dockerfile: mumble.dockerfile
    env_file:
      - ./.env
    restart: unless-stopped
    volumes:
      - mumble-data:/data
      - /etc/letsencrypt:/etc/letsencrypt:ro    
    depends_on:
      - auth_mysql
    ports:
      - 64738:64738
      - 64738:64738/udp
    networks:
      - allianceauth

  redis:
    image: redis:6.2
    command: redis-server
    restart: always
    volumes:
      - "redis-data:/data"
    networks:
      - allianceauth

  allianceauth:
    build:
      context: .
      dockerfile: auth.dockerfile
      args:
        AA_DOCKER_TAG: ${AA_DOCKER_TAG?err}
    restart: always
    env_file:
      - ./.env
    volumes:
      - ./conf/local.py:/home/allianceauth/myauth/myauth/settings/local.py
      - ./templates:/home/allianceauth/myauth/myauth/templates/
      - ./conf/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
      - static-volume:/var/www/myauth/static
    depends_on:
      - redis
      - auth_mysql
      - mumble_auth
    networks:
      - allianceauth

volumes:
    redis-data:
    static-volume:
    mumble-data:

networks:
  allianceauth:
  traefik: